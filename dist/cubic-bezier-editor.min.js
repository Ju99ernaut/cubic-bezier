parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"dgGA":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.prefix=exports.$$=exports.$=void 0;const e=(e,t)=>(t||document).querySelector(e),t=(e,t)=>(t||document).querySelectorAll(e);exports.$$=t,exports.$=e;const r=["","-moz-","-ms-","-o-","-webkit-"],o=(e=>{for(var t=r.length;t--;){var o=r[t];if(e.setProperty(o+"transition","1s",null),e.cssText)return o}return null})(document.createElement("a").style);exports.prefix=o;
},{}],"q8bl":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BezierCanvas=exports.CubicBezier=void 0;var e=require("./enviroment");function t(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}class i{constructor(e){t(this,"prettifyNumber",e=>(Math.round(100*e)/100+"").replace(/^0\./,".")),this.isCoordinates(e),this.coordinates=this.decodeCoordinates(e),this.coordinates=this.coordinates.map(e=>+e),this.coordinates.toString=(()=>this.coordinates.map(this.prettifyNumber)+"")}isCoordinates(e){if(!e)throw"No offsets were defined"}decodeCoordinates(e){return"string"==typeof e?(0===e.indexOf("#")&&(e=e.slice(1)),e.split(",")):e}get P1(){return this.coordinates.slice(0,2)}get P2(){return this.coordinates.slice(2)}get clipped(){let e=this.coordinates.slice();for(let t=e.length;t--;)e[t]=Math.max(0,Math.min(e[t],1));return new this(e)}get inRange(){let e=this.coordinates;return Math.abs(e[1]-.5)<=.5&&Math.abs(e[3]-.5)<=.5}toString(){return"cubic-bezier("+this.coordinates+")"}applyStyle(t){t.style.setProperty(e.prefix+"transition-timing-function",this,null)}}exports.CubicBezier=i;class s{constructor(e,t,i){this.canvas=e,this.bezier=t,this.padding=this.getPadding(i);const s=this.canvas.getContext("2d"),o=this.padding;s.scale(e.width*(1-o[1]-o[3]),-e.height*(1-o[0]-o[2])),s.translate(o[3]/(1-o[1]-o[3]),-1-o[0]/(1-o[0]-o[2]))}get offsets(){const e=this.padding,t=this.canvas.width,i=this.canvas.height;return[{left:t*(this.bezier.coordinates[0]*(1-e[3]-e[1])-e[3])+"px",top:i*(1-this.bezier.coordinates[1]*(1-e[0]-e[2])-e[0])+"px"},{left:t*(this.bezier.coordinates[2]*(1-e[3]-e[1])-e[3])+"px",top:i*(1-this.bezier.coordinates[3]*(1-e[0]-e[2])-e[0])+"px"}]}offsetsToCoordinates(e){let t=this.padding;const i=this.canvas.width,s=this.canvas.height;return t=t.map((e,t)=>e*(t%2?i:s)),[(parseInt(e.style.left)-t[3])/(i+t[1]+t[3]),(s-parseInt(e.style.top)-t[2])/(s-t[0]-t[2])]}plot(e){const t=this.bezier.coordinates,i=this.canvas.getContext("2d"),s={handleColor:"rgba(0,0,0,.6)",handleThickness:.008,bezierColor:"black",bezierThickness:.02};e||(e={});for(let r in s)r in e||(e[r]=s[r]);i.clearRect(-.5,-.5,2,2),i.beginPath(),i.fillStyle=e.handleColor,i.lineWidth=e.handleThickness,i.strokeStyle=e.handleColor,i.moveTo(0,0),i.lineTo(t[0],t[1]),i.moveTo(1,1),i.lineTo(t[2],t[3]),i.stroke(),i.closePath();const o=1.5*e.handleThickness;i.beginPath(),i.arc(t[0],t[1],o,0,2*Math.PI,!1),i.closePath(),i.fill(),i.beginPath(),i.arc(t[2],t[3],o,0,2*Math.PI,!1),i.closePath(),i.fill(),i.beginPath(),i.lineWidth=e.bezierThickness,i.strokeStyle=e.bezierColor,i.moveTo(0,0),i.bezierCurveTo(t[0],t[1],t[2],t[3],1,1),i.stroke(),i.closePath()}getPadding(e){let t="number"==typeof e?[e]:e;return 1===t.length&&(t[1]=t[0]),2===t.length&&(t[2]=t[0]),3===t.length&&(t[3]=t[1]),t}}exports.BezierCanvas=s;
},{"./enviroment":"dgGA"}],"rUsD":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var e=require("./enviroment"),t=require("./cubic-bezier"),s=(s,i,l,n,r={})=>{const o={curves:{},render(){const i=(0,e.$$)("a",s);for(let e=i.length;e--;)s.removeChild(i[e]);for(let e in this.curves)try{this.add(e,new t.CubicBezier(this.curves[e]))}catch(l){console.error(l)}},add(i,l){const n=document.createElement("canvas");n.width=r.width||30,n.height=r.height||30;const a=document.createElement("a");a.title=i,a.bezier=l,a.style.width=r.width?r.width+5+"px":"35px",a.bezierCanvas=new t.BezierCanvas(n,l,.15),l.applyStyle||console.log(l),l.applyStyle(a),s.insertBefore(a,(0,e.$)("footer",s)),a.appendChild(n);const c=document.createElement("span");c.textContent=i,c.title=i,a.appendChild(c);const d=document.createElement("button");d.innerHTML="Ã—",d.title="Remove from library",d.classList="curve-button",d.addEventListener("click",function(e){return e.stopPropagation(),o.deleteItem(this.parentNode),!1}),a.appendChild(d),a.bezierCanvas.plot(this.thumbnailStyle),a.onclick=this.selectThumbnail},selectThumbnail(){const t=(0,e.$)(".selected",this.parentNode);t&&(t.classList.remove("selected"),t.bezierCanvas.plot(this.thumbnailStyle)),this.classList.add("selected"),i.bezier=this.bezier;const s=i.offsets;l.style.left=s[0].left,l.style.top=s[0].top,n.style.left=s[1].left,n.style.top=s[1].top,l.update()},deleteItem(t){const i=(0,e.$)("span",t).textContent;delete this.curves[i],this.save(),s.removeChild(t),t.classList.contains("selected")&&(0,e.$)("a:first-of-type",s).onclick()},save(e){localStorage.curves=JSON.stringify(e||this.curves)},thumbnailStyle:{handleColor:"rgba(0,0,0,.3)",handleThickness:.018,bezierThickness:.032},thumbnailStyleSelected:{handleColor:"rgba(255,255,255,.6)",bezierColor:"white",handleThickness:.018,bezierThickness:.032}};return o};exports.default=s;
},{"./enviroment":"dgGA","./cubic-bezier":"q8bl"}],"E8WP":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.predefined=void 0;const e={ease:".25,.1,.25,1",linear:"0,0,1,1","ease-in":".42,0,1,1","ease-out":"0,0,.58,1","ease-in-out":".42,0,.58,1"};exports.predefined=e;
},{}],"iMte":[function(require,module,exports) {

},{}],"Focm":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.cubicBezier=void 0;var t=o(require("./bezier-library")),e=require("./enviroment"),s=require("./cubic-bezier"),i=require("./consts"),n=o(require("./style.css"));function o(t){return t&&t.__esModule?t:{default:t}}function r(t,e){var s=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),s.push.apply(s,i)}return s}function a(t){for(var e=1;e<arguments.length;e++){var s=null!=arguments[e]?arguments[e]:{};e%2?r(Object(s),!0).forEach(function(e){l(t,e,s[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(s)):r(Object(s)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(s,e))})}return t}function l(t,e,s){return e in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}const u=(n={})=>{const o=a(a({},{preview:!0,input:!0,width:150,arrowKeyControls:!0,onClick:!0,onUpdate(){}}),n),r={template:`<section class="curve-library" style="height:${2*o.width}px;margin-left:${o.width+30}px;"></section>\n                    ${o.preview?'<div class="curve-preview-ball"></div>':""}\n                    <div class="coordinate-plane">\n                        <span class="control-point P0" data-point="P0"></span>\n                        <button class="control-point curve-button P1" style="left:50px; top: 250px;" data-point="P1"></button>\n                        <button class="control-point curve-button P2" style="left:250px; top: 250px;" data-point="P2"></button>\n                        <span class="curve-control-point P3" data-point="P3"></span>\n                        <canvas height="${2*o.width}" width="${o.width}" class="curve-canvas"></canvas>\n                        ${o.input?'<input type="text" id="curve-input">':""}\n                        <button class="curve-save">Save</button>\n                    </div>`,onMouseDown(){const t=this;document.onmousemove=function(e){const s=r.curve.getBoundingClientRect();let i=e.pageX,o=e.pageY,a=s.left,l=s.top;if(n.transformPos){const t=n.transformPos(a,l);a=t.left,l=t.top}0===i&&0==o||(i=Math.min(Math.max(a,i),a+s.width),o=Math.min(Math.max(l,o),l+2*s.width),t.style.left=i-a+"px",t.style.top=o-l+"px",r.update())},document.onmouseup=function(){t.focus(),document.onmousemove=document.onmouseup=null}},onKeyDown(t){const e=t.keyCode;if(e>=37&&e<=40){t.preventDefault();const s=r.curve.getBoundingClientRect(),i=parseInt(this.style.left),o=parseInt(this.style.top),a=3*(t.shiftKey?10:1);let l=s.left,u=s.top;if(n.transformPos){const t=n.transformPos(l,u);l=t.left,u=t.top}switch(e){case 37:this.style.left=Math.min(Math.max(l,i-a),l+s.width)+"px";break;case 38:this.style.top=Math.min(Math.max(u,o-a),u+2*s.width)+"px";break;case 39:this.style.left=Math.min(Math.max(l,i+a),l+s.width)+"px";break;case 40:this.style.top=Math.min(Math.max(u,o+a),u+2*s.width)+"px"}return r.update(),!1}},onClick(t){const e=r.curve.getBoundingClientRect();let s=e.left,i=e.top;if(n.transformPos){const t=n.transformPos(s,i);s=t.left,i=t.top}const o=t.pageX-s,a=t.pageY-i,l=u(o,a,parseInt(r.P1.style.left),parseInt(r.P1.style.top))<u(o,a,parseInt(r.P2.style.left),parseInt(r.P2.style.top))?r.P1:r.P2;function u(t,e,s,i){return Math.sqrt(Math.pow(t-s,2)+Math.pow(e-i,2))}l.style.left=o+"px",l.style.top=a+"px",r.update()},onMouseMove(t){const e=r.curve.getBoundingClientRect();let s=e.left,i=e.top;const o=e.height;if(n.transformPos){const t=n.transformPos(s,i);s=t.left,i=t.top}const a=t.pageX-s,l=t.pageY-i;this.parentNode.setAttribute("data-time",Math.round(100*a/e.width)),this.parentNode.setAttribute("data-progression",Math.round(100*(3*o/4-l)/(.5*o)))},onSave(){const t=this.bezierCanvas.bezier.coordinates+"";this.lib.add(t,this.bezierCanvas.bezier),this.lib.curves[t]=t,this.lib.save()},onChange(){r.checkCoordinates(this.value.split(","))&&(r.update(this.value),r.P1.style.left=r.bezierCanvas.offsets[0].left,r.P1.style.top=r.bezierCanvas.offsets[0].top,r.P2.style.left=r.bezierCanvas.offsets[1].left,r.P2.style.top=r.bezierCanvas.offsets[1].top)},runPreview(){"translateX(0px)"!==this.ball.style.transform?this.ball.style.transform="translateX(0px)":this.ball.style.transform=`translateX(${o.width-10}px)`},update(t=""){this.bezierCanvas.bezier=new s.CubicBezier(t||this.bezierCanvas.offsetsToCoordinates(this.P1).concat(this.bezierCanvas.offsetsToCoordinates(this.P2))),this.bezierCanvas.plot({handleColor:o.handleColor||"rgba(0,255,0,.6)",bezierColor:o.bezierColor||"#aaa4aa",handleThickness:o.handleThickness||.01,bezierThickness:o.bezierThickness||.015}),this.input&&(this.input.value=this.getValueString()),this.ball&&this.ball.style.setProperty(e.prefix+"transition-timing-function",this.getValueCss(),null),o.onUpdate(this)},updateDelayed(){history.pushState&&history.pushState(null,null,this.bezierCanvas.bezier.coordinates)},getValueArrayNum(){return this.bezierCanvas.bezier.coordinates.toString().split(",").map(t=>parseFloat(t))},getValueArray(){return this.bezierCanvas.bezier.coordinates.toString().split(",")},getValueString(){return this.bezierCanvas.bezier.coordinates.toString()},getValueCss(){return"cubic-bezier("+this.bezierCanvas.bezier.coordinates.toString()+")"},getDuration(){return isNaN(this.duration=Math.round(10*this.duration)/10)?null:this.duration},checkCoordinates(t){if(4!==t.length)return!1;let e=!0;return t.forEach((t,s)=>{isNaN(t)||!(s%2)&&(t<0||t>1)?(console.log("Wrong coordinate at ["+s+"] ("+t+")"),e=!1):(isNaN(t)||s%2&&(t<-.5||t>1.5))&&(console.log("Wrong coordinate at ["+s+"] ("+t+")"),e=!1)}),e},init(){const n=document.createElement("div");n.classList.add("curve-display"),n.innerHTML=this.template,n.style.width=o.width+90+"px",o.appendTo&&"string"==typeof o.appendChild?(0,e.$)(o.appendTo).appendChild(n):o.appendTo&&o.appendTo.appendChild(n)||document.body.appendChild(n),this.el=n,this.input=(0,e.$)("#curve-input",n),this.curve=(0,e.$)(".curve-canvas",n),this.P1=(0,e.$)(".P1",n),this.P2=(0,e.$)(".P2",n),this.library=(0,e.$)(".curve-library",n),this.save=(0,e.$)(".curve-save",n),this.duration=o.duration||1.5,this.ball=(0,e.$)(".curve-preview-ball",n),this.ball&&this.ball.style.setProperty(e.prefix+"transition-duration",this.getDuration()+"s",null),this.bezierCanvas=new s.BezierCanvas(this.curve,null,o.padding||[.25,0]),this.P1.update=(()=>this.update()),this.lib=(0,t.default)(this.library,this.bezierCanvas,this.P1,this.P2,o.bezierLibrary),this.ctx=this.curve.getContext("2d"),o.clearStorage&&localStorage.curves&&localStorage.removeItem("curves"),!localStorage.curves&&this.lib.save(o.predefined||i.predefined),this.lib.curves=JSON.parse(localStorage.curves),this.lib.render(),o.default&&this.checkCoordinates(o.default.split(","))||(o.default=!1),this.bezierCanvas.bezier=new s.CubicBezier(o.default||".25, .1, .25, 1"),this.P1.style.left=this.bezierCanvas.offsets[0].left,this.P1.style.top=this.bezierCanvas.offsets[0].top,this.P2.style.left=this.bezierCanvas.offsets[1].left,this.P2.style.top=this.bezierCanvas.offsets[1].top,this.update(),this.P1.onmousedown=this.P2.onmousedown=this.onMouseDown,this.P1.onkeydown=this.P2.onkeydown=o.arrowKeyControls?this.onKeyDown:null,this.curve.onclick=o.onClick?this.onClick:null,this.curve.onmousemove=this.onMouseMove,this.input&&(this.input.onchange=this.onChange),this.ball&&(this.ball.onclick=(()=>this.runPreview())),this.save.onclick=(t=>this.onSave(t))}};return r};exports.cubicBezier=u,window.cubicBezier=u;
},{"./bezier-library":"rUsD","./enviroment":"dgGA","./cubic-bezier":"q8bl","./consts":"E8WP","./style.css":"iMte"}]},{},["Focm"], null)
//# sourceMappingURL=/cubic-bezier-editor.min.js.map