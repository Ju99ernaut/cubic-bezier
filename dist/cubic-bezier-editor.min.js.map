{"version":3,"sources":["enviroment.js","cubic-bezier.js","bezier-library.js","consts.js","index.js"],"names":["$","expr","con","document","querySelector","$$","querySelectorAll","prefixes","prefix","style","i","length","setProperty","cssText","createElement","CubicBezier","constructor","coordinates","val","Math","round","replace","isCoordinates","decodeCoordinates","map","n","toString","prettifyNumber","indexOf","slice","split","P1","P2","clipped","max","min","inRange","abs","applyStyle","element","BezierCanvas","canvas","bezier","padding","getPadding","ctx","getContext","p","scale","width","height","translate","offsets","w","h","left","top","offsetsToCoordinates","a","parseInt","plot","settings","xy","defaultSettings","handleColor","handleThickness","bezierColor","bezierThickness","setting","clearRect","beginPath","fillStyle","lineWidth","strokeStyle","moveTo","lineTo","stroke","closePath","r","arc","PI","fill","bezierCurveTo","library","bezierCanvas","opts","self","curves","render","items","removeChild","name","add","e","console","error","title","log","insertBefore","appendChild","span","textContent","button","innerHTML","classList","addEventListener","stopPropagation","deleteItem","parentNode","thumbnailStyle","onclick","selectThumbnail","selected","remove","update","save","contains","localStorage","JSON","stringify","thumbnailStyleSelected","predefined","cubicBezier","options","preview","input","arrowKeyControls","onClick","onUpdate","template","onMouseDown","me","onmousemove","curveBoundingBox","curve","getBoundingClientRect","x","pageX","y","pageY","transformPos","transform","onmouseup","focus","onKeyDown","evt","code","keyCode","preventDefault","offset","shiftKey","xMax","yMax","pt","distance","x1","y1","x2","y2","sqrt","pow","onMouseMove","setAttribute","onSave","rawValues","lib","onChange","checkCoordinates","value","runPreview","ball","concat","getValueString","getValueCss","updateDelayed","history","pushState","getValueArrayNum","parseFloat","getValueArray","getDuration","isNaN","duration","valid","forEach","c","init","curveDisplay","appendTo","body","el","bezierLibrary","clearStorage","removeItem","parse","default","onmousedown","onkeydown","onchange","window"],"mappings":"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","file":"cubic-bezier-editor.min.js","sourceRoot":"..\\src","sourcesContent":["/*\r\n * Original work, Copyright (c) 2013 Lea Verou. All rights reserved.\r\n * Modified work, Copyright (c) 2020 Brendon Ngirazi. All rights reserved.\r\n *\r\n */\r\n\r\n/**\r\n * Make the environment a bit friendlier\r\n */\r\nexport const $ = (expr, con) => {\r\n        return (con || document).querySelector(expr);\r\n    },\r\n    $$ = (expr, con) => {\r\n        return (con || document).querySelectorAll(expr);\r\n    }\r\n\r\n/**\r\n * Find browser prefix\r\n */\r\nconst prefixes = ['', '-moz-', '-ms-', '-o-', '-webkit-'];\r\nexport const prefix = (style => {\r\n    for (var i = prefixes.length; i--;) {\r\n        var prefix = prefixes[i];\r\n\r\n        style.setProperty(prefix + 'transition', '1s', null);\r\n\r\n        if (style.cssText) {\r\n            return prefix;\r\n        }\r\n    }\r\n\r\n    return null;\r\n})(document.createElement('a').style);","/*\r\n * Original work, Copyright (c) 2013 Lea Verou. All rights reserved.\r\n * Modified work, Copyright (c) 2020 Brendon Ngirazi. All rights reserved.\r\n *\r\n */\r\n\r\nimport { prefix } from './enviroment';\r\n\r\nexport class CubicBezier {\r\n    /**\r\n     * CubicBezier\r\n     * \r\n     * Create a cubic-bezier object instance\r\n     * \r\n     * @param {Array} coordinates\r\n     */\r\n    constructor(coordinates) {\r\n        this.isCoordinates(coordinates)\r\n        this.coordinates = this.decodeCoordinates(coordinates);\r\n        this.coordinates = this.coordinates.map(n => {\r\n            return +n;\r\n        });\r\n        this.coordinates.toString = () => {\r\n            return this.coordinates.map(this.prettifyNumber) + '';\r\n        }\r\n    };\r\n\r\n    isCoordinates(coordinates) {\r\n        if (!coordinates) {\r\n            throw 'No offsets were defined';\r\n        }\r\n    }\r\n\r\n    decodeCoordinates(coordinates) {\r\n        if (typeof coordinates === 'string') {\r\n            if (coordinates.indexOf('#') === 0) {\r\n                coordinates = coordinates.slice(1);\r\n            }\r\n\r\n            return coordinates.split(',');\r\n        } else {\r\n            return coordinates;\r\n        }\r\n    }\r\n\r\n    prettifyNumber = val => {\r\n        return (Math.round(val * 100) / 100 + '').replace(/^0\\./, '.');\r\n    };\r\n\r\n    get P1() {\r\n        return this.coordinates.slice(0, 2);\r\n    };\r\n\r\n    get P2() {\r\n        return this.coordinates.slice(2);\r\n    };\r\n\r\n    // Clipped to the range 0-1\r\n    get clipped() {\r\n        let coordinates = this.coordinates.slice();\r\n\r\n        for (let i = coordinates.length; i--;) {\r\n            coordinates[i] = Math.max(0, Math.min(coordinates[i], 1));\r\n        }\r\n\r\n        return new this(coordinates);\r\n    };\r\n\r\n    get inRange() {\r\n        let coordinates = this.coordinates;\r\n\r\n        return Math.abs(coordinates[1] - .5) <= .5 && Math.abs(coordinates[3] - .5) <= .5;\r\n    };\r\n\r\n    toString() {\r\n        return 'cubic-bezier(' + this.coordinates + ')';\r\n    };\r\n\r\n    applyStyle(element) {\r\n        element.style.setProperty(prefix + 'transition-timing-function', this, null);\r\n    };\r\n}\r\n\r\nexport class BezierCanvas {\r\n    constructor(canvas, bezier, padding) {\r\n        this.canvas = canvas;\r\n        this.bezier = bezier;\r\n        this.padding = this.getPadding(padding);\r\n\r\n        // Convert to a cartesian coordinate system with axes from 0 to 1\r\n        const ctx = this.canvas.getContext('2d'),\r\n            p = this.padding;\r\n\r\n        ctx.scale(canvas.width * (1 - p[1] - p[3]), -canvas.height * (1 - p[0] - p[2]));\r\n        ctx.translate(p[3] / (1 - p[1] - p[3]), -1 - p[0] / (1 - p[0] - p[2]));\r\n    }\r\n\r\n    get offsets() {\r\n        const p = this.padding,\r\n            w = this.canvas.width,\r\n            h = this.canvas.height;\r\n\r\n        return [{\r\n            left: w * (this.bezier.coordinates[0] * (1 - p[3] - p[1]) - p[3]) + 'px',\r\n            top: h * (1 - this.bezier.coordinates[1] * (1 - p[0] - p[2]) - p[0]) + 'px'\r\n        }, {\r\n            left: w * (this.bezier.coordinates[2] * (1 - p[3] - p[1]) - p[3]) + 'px',\r\n            top: h * (1 - this.bezier.coordinates[3] * (1 - p[0] - p[2]) - p[0]) + 'px'\r\n        }]\r\n    };\r\n\r\n    offsetsToCoordinates(element) {\r\n        let p = this.padding;\r\n        const w = this.canvas.width,\r\n            h = this.canvas.height;\r\n\r\n        // Convert padding percentage to actual padding\r\n        p = p.map((a, i) => {\r\n            return a * (i % 2 ? w : h)\r\n        });\r\n\r\n        return [\r\n            (parseInt(element.style.left) - p[3]) / (w + p[1] + p[3]),\r\n            (h - parseInt(element.style.top) - p[2]) / (h - p[0] - p[2])\r\n        ];\r\n    };\r\n\r\n    plot(settings) {\r\n        const xy = this.bezier.coordinates,\r\n            ctx = this.canvas.getContext('2d');\r\n\r\n        const defaultSettings = {\r\n            handleColor: 'rgba(0,0,0,.6)',\r\n            handleThickness: .008,\r\n            bezierColor: 'black',\r\n            bezierThickness: .02\r\n        };\r\n\r\n        settings || (settings = {});\r\n\r\n        for (let setting in defaultSettings) {\r\n            (setting in settings) || (settings[setting] = defaultSettings[setting]);\r\n        }\r\n\r\n        ctx.clearRect(-.5, -.5, 2, 2);\r\n\r\n        // Draw control handles\r\n        ctx.beginPath();\r\n        ctx.fillStyle = settings.handleColor;\r\n        ctx.lineWidth = settings.handleThickness;\r\n        ctx.strokeStyle = settings.handleColor;\r\n\r\n        ctx.moveTo(0, 0);\r\n        ctx.lineTo(xy[0], xy[1]);\r\n        ctx.moveTo(1, 1);\r\n        ctx.lineTo(xy[2], xy[3]);\r\n\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n\r\n        const r = 1.5 * settings.handleThickness;\r\n        ctx.beginPath();\r\n        ctx.arc(xy[0], xy[1], r, 0, 2 * Math.PI, false);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.beginPath();\r\n        ctx.arc(xy[2], xy[3], r, 0, 2 * Math.PI, false);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        // Draw bezier curve\r\n        ctx.beginPath();\r\n        ctx.lineWidth = settings.bezierThickness;\r\n        ctx.strokeStyle = settings.bezierColor;\r\n        ctx.moveTo(0, 0);\r\n        ctx.bezierCurveTo(xy[0], xy[1], xy[2], xy[3], 1, 1);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    };\r\n\r\n    getPadding(padding) {\r\n        let p = typeof padding === 'number' ? [padding] : padding;\r\n\r\n        if (p.length === 1) {\r\n            p[1] = p[0];\r\n        }\r\n\r\n        if (p.length === 2) {\r\n            p[2] = p[0];\r\n        }\r\n\r\n        if (p.length === 3) {\r\n            p[3] = p[1];\r\n        }\r\n\r\n        return p;\r\n    };\r\n}","/*\r\n * Original work, Copyright (c) 2013 Lea Verou. All rights reserved.\r\n * Modified work, Copyright (c) 2020 Brendon Ngirazi. All rights reserved.\r\n *\r\n */\r\n\r\nimport { $, $$ } from './enviroment';\r\nimport { CubicBezier, BezierCanvas } from './cubic-bezier';\r\n\r\nexport default (library, bezierCanvas, P1, P2, opts = {}) => {\r\n    const self = {\r\n        curves: {},\r\n\r\n        render() {\r\n            const items = $$('a', library);\r\n\r\n            for (let i = items.length; i--;) {\r\n                library.removeChild(items[i]);\r\n            }\r\n\r\n            for (let name in this.curves) {\r\n                try {\r\n                    this.add(name, new CubicBezier(this.curves[name]));\r\n                } catch (e) {\r\n                    console.error(e);\r\n                }\r\n            }\r\n        },\r\n\r\n        add(name, bezier) {\r\n            const canvas = document.createElement('canvas')\r\n            canvas.width = opts.width || 30;\r\n            canvas.height = opts.height || 30;\r\n            const a = document.createElement('a');\r\n            //href: '#' + bezier.coordinates,\r\n            a.title = name;\r\n            a.bezier = bezier;\r\n            a.style.width = opts.width ? opts.width + 5 + 'px' : '35px';\r\n            a.bezierCanvas = new BezierCanvas(canvas, bezier, .15);\r\n\r\n            if (!bezier.applyStyle) console.log(bezier);\r\n            bezier.applyStyle(a);\r\n\r\n            library.insertBefore(a, $('footer', library));\r\n\r\n            a.appendChild(canvas)\r\n\r\n            const span = document.createElement('span');\r\n            span.textContent = name;\r\n            span.title = name;\r\n            a.appendChild(span);\r\n\r\n            const button = document.createElement('button');\r\n            button.innerHTML = '×';\r\n            button.title = 'Remove from library';\r\n            button.classList = 'curve-button';\r\n            button.addEventListener('click', function(e) {\r\n                e.stopPropagation();\r\n                //?Remove prompt\r\n                self.deleteItem(this.parentNode);\r\n\r\n                return false;\r\n            });\r\n            a.appendChild(button);\r\n\r\n            a.bezierCanvas.plot(this.thumbnailStyle);\r\n\r\n            a.onclick = this.selectThumbnail;\r\n\r\n            //if (!/^a$/i.test(a.previousElementSibling.nodeName)) {\r\n            //\ta.onclick();\r\n            //}\r\n        },\r\n\r\n        selectThumbnail() {\r\n            //?currently sets preview but should set curve coordinates and update input\r\n            const selected = $('.selected', this.parentNode);\r\n\r\n            if (selected) {\r\n                selected.classList.remove('selected');\r\n                selected.bezierCanvas.plot(this.thumbnailStyle);\r\n            }\r\n\r\n            this.classList.add('selected');\r\n            bezierCanvas.bezier = this.bezier;\r\n            const offsets = bezierCanvas.offsets;\r\n            P1.style.left = offsets[0]['left'];\r\n            P1.style.top = offsets[0]['top'];\r\n            P2.style.left = offsets[1]['left'];\r\n            P2.style.top = offsets[1]['top'];\r\n            P1.update();\r\n        },\r\n\r\n        deleteItem(a) {\r\n            const name = $('span', a).textContent;\r\n\r\n            delete this.curves[name];\r\n\r\n            this.save();\r\n\r\n            library.removeChild(a);\r\n\r\n            if (a.classList.contains('selected')) {\r\n                $('a:first-of-type', library).onclick();\r\n            }\r\n        },\r\n\r\n        save(curves) {\r\n            localStorage.curves = JSON.stringify(curves || this.curves);\r\n        },\r\n\r\n        thumbnailStyle: {\r\n            handleColor: 'rgba(0,0,0,.3)',\r\n            handleThickness: .018,\r\n            bezierThickness: .032\r\n        },\r\n\r\n        thumbnailStyleSelected: {\r\n            handleColor: 'rgba(255,255,255,.6)',\r\n            bezierColor: 'white',\r\n            handleThickness: .018,\r\n            bezierThickness: .032\r\n        }\r\n    };\r\n\r\n    return self;\r\n}","export const predefined = {\r\n    'ease': '.25,.1,.25,1',\r\n    'linear': '0,0,1,1',\r\n    'ease-in': '.42,0,1,1',\r\n    'ease-out': '0,0,.58,1',\r\n    'ease-in-out': '.42,0,.58,1'\r\n}","import bezierLibrary from './bezier-library';\r\nimport { $, prefix } from './enviroment';\r\nimport { CubicBezier, BezierCanvas } from './cubic-bezier';\r\nimport { predefined } from './consts';\r\nimport classes from './style.css';\r\n\r\n/**\r\n * Returns cubicBezier\r\n * @param {Object} opts appendTo, width, default, bezierThickness, handleThickness, hanleColor, \r\n * bezierColor, arrowKeyControls, onClick, predefined, padding, bezierLibrary, input, preview, duration,\r\n * transformPos\r\n */\r\nexport const cubicBezier = (options = {}) => {\r\n    const opts = {\r\n        ...{\r\n            preview: true,\r\n            input: true,\r\n            width: 150,\r\n            arrowKeyControls: true,\r\n            onClick: true,\r\n            onUpdate() {}\r\n        },\r\n        ...options\r\n    };\r\n    const self = {\r\n        template: `<section class=\"curve-library\" style=\"height:${opts.width*2}px;margin-left:${opts.width+30}px;\"></section>\r\n                    ${opts.preview ? '<div class=\"curve-preview-ball\"></div>' : ''}\r\n                    <div class=\"coordinate-plane\">\r\n                        <span class=\"control-point P0\" data-point=\"P0\"></span>\r\n                        <button class=\"control-point curve-button P1\" style=\"left:50px; top: 250px;\" data-point=\"P1\"></button>\r\n                        <button class=\"control-point curve-button P2\" style=\"left:250px; top: 250px;\" data-point=\"P2\"></button>\r\n                        <span class=\"curve-control-point P3\" data-point=\"P3\"></span>\r\n                        <canvas height=\"${opts.width*2}\" width=\"${opts.width}\" class=\"curve-canvas\"></canvas>\r\n                        ${opts.input ? '<input type=\"text\" id=\"curve-input\">' : ''}\r\n                        <button class=\"curve-save\">Save</button>\r\n                    </div>`,\r\n        onMouseDown() {\r\n            const me = this;\r\n\r\n            document.onmousemove = function drag(e) {\r\n                const curveBoundingBox = self.curve.getBoundingClientRect();\r\n                let x = e.pageX,\r\n                    y = e.pageY,\r\n                    left = curveBoundingBox.left,\r\n                    top = curveBoundingBox.top;\r\n\r\n                if (options.transformPos) {\r\n                    const transform = options.transformPos(left, top);\r\n                    left = transform.left;\r\n                    top = transform.top;\r\n                }\r\n\r\n                if (x === 0 && y == 0)\r\n                    return;\r\n\r\n                // Constrain x\r\n                x = Math.min(Math.max(left, x), left + curveBoundingBox.width);\r\n                // Constrain y\r\n                y = Math.min(Math.max(top, y), top + (curveBoundingBox.width * 2));\r\n\r\n                me.style.left = x - left + 'px';\r\n                me.style.top = y - top + 'px';\r\n\r\n                self.update();\r\n            };\r\n\r\n            document.onmouseup = function() {\r\n                me.focus();\r\n\r\n                document.onmousemove = document.onmouseup = null;\r\n            }\r\n        },\r\n        onKeyDown(evt) {\r\n            const code = evt.keyCode;\r\n\r\n            if (code >= 37 && code <= 40) {\r\n                evt.preventDefault();\r\n\r\n                // Arrow keys pressed\r\n                const curveBoundingBox = self.curve.getBoundingClientRect(),\r\n                    left = parseInt(this.style.left),\r\n                    top = parseInt(this.style.top),\r\n                    offset = 3 * (evt.shiftKey ? 10 : 1);\r\n\r\n                let xMax = curveBoundingBox.left,\r\n                    yMax = curveBoundingBox.top;\r\n\r\n                if (options.transformPos) {\r\n                    const transform = options.transformPos(xMax, yMax);\r\n                    xMax = transform.left;\r\n                    yMax = transform.top;\r\n                }\r\n\r\n                switch (code) {\r\n                    case 37:\r\n                        this.style.left = Math.min(Math.max(xMax, left - offset), xMax + curveBoundingBox.width) + 'px'\r\n                        break;\r\n                    case 38:\r\n                        this.style.top = Math.min(Math.max(yMax, top - offset), yMax + (curveBoundingBox.width * 2)) + 'px';\r\n                        break;\r\n                    case 39:\r\n                        this.style.left = Math.min(Math.max(xMax, left + offset), xMax + curveBoundingBox.width) + 'px';\r\n                        break;\r\n                    case 40:\r\n                        this.style.top = Math.min(Math.max(yMax, top + offset), yMax + (curveBoundingBox.width * 2)) + 'px';\r\n                        break;\r\n                }\r\n\r\n                self.update();\r\n\r\n                return false;\r\n            }\r\n        },\r\n        onClick(evt) {\r\n            const curveBoundingBox = self.curve.getBoundingClientRect();\r\n            let left = curveBoundingBox.left,\r\n                top = curveBoundingBox.top;\r\n\r\n            if (options.transformPos) {\r\n                const transform = options.transformPos(left, top);\r\n                left = transform.left;\r\n                top = transform.top;\r\n            }\r\n\r\n            const x = evt.pageX - left,\r\n                y = evt.pageY - top;\r\n\r\n            // Find which point is closer\r\n            const distP1 = distance(x, y, parseInt(self.P1.style.left), parseInt(self.P1.style.top)),\r\n                distP2 = distance(x, y, parseInt(self.P2.style.left), parseInt(self.P2.style.top)),\r\n                pt = (distP1 < distP2 ? self.P1 : self.P2);\r\n\r\n            pt.style.left = x + 'px';\r\n            pt.style.top = y + 'px';\r\n\r\n            self.update();\r\n\r\n            function distance(x1, y1, x2, y2) {\r\n                return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\r\n            }\r\n        },\r\n        onMouseMove(evt) {\r\n            const curveBoundingBox = self.curve.getBoundingClientRect();\r\n            let left = curveBoundingBox.left,\r\n                top = curveBoundingBox.top;\r\n            const height = curveBoundingBox.height;\r\n\r\n            if (options.transformPos) {\r\n                const transform = options.transformPos(left, top);\r\n                left = transform.left;\r\n                top = transform.top;\r\n            }\r\n\r\n            const x = evt.pageX - left,\r\n                y = evt.pageY - top;\r\n\r\n            this.parentNode.setAttribute('data-time', Math.round(100 * x / curveBoundingBox.width));\r\n            this.parentNode.setAttribute('data-progression', Math.round(100 * (3 * height / 4 - y) / (height * .5)));\r\n        },\r\n        onSave() {\r\n            const rawValues = this.bezierCanvas.bezier.coordinates + '';\r\n            this.lib.add(rawValues, this.bezierCanvas.bezier);\r\n            this.lib.curves[rawValues] = rawValues;\r\n            this.lib.save();\r\n        },\r\n        onChange() {\r\n            if (!self.checkCoordinates(this.value.split(','))) return;\r\n            self.update(this.value);\r\n            self.P1.style.left = self.bezierCanvas.offsets[0]['left'];\r\n            self.P1.style.top = self.bezierCanvas.offsets[0]['top'];\r\n            self.P2.style.left = self.bezierCanvas.offsets[1]['left'];\r\n            self.P2.style.top = self.bezierCanvas.offsets[1]['top'];\r\n        },\r\n        runPreview() {\r\n            //this.updateDelayed();\r\n            if (this.ball.style.transform !== 'translateX(0px)')\r\n                this.ball.style.transform = 'translateX(0px)';\r\n            else\r\n                this.ball.style.transform = `translateX(${opts.width - 10}px)`;\r\n        },\r\n        update(value = '') {\r\n            // Redraw canvas\r\n            this.bezierCanvas.bezier = new CubicBezier(value ||\r\n                this.bezierCanvas.offsetsToCoordinates(this.P1)\r\n                .concat(this.bezierCanvas.offsetsToCoordinates(this.P2))\r\n            );\r\n\r\n            this.bezierCanvas.plot({\r\n                handleColor: opts.handleColor || 'rgba(0,255,0,.6)',\r\n                bezierColor: opts.bezierColor || '#aaa4aa',\r\n                handleThickness: opts.handleThickness || .01,\r\n                bezierThickness: opts.bezierThickness || .015\r\n            });\r\n\r\n            this.input && (this.input.value = this.getValueString());\r\n            this.ball && this.ball.style.setProperty(prefix + 'transition-timing-function', this.getValueCss(), null);\r\n            opts.onUpdate(this);\r\n            //this.updateDelayed();\r\n        },\r\n        updateDelayed() {\r\n            if (history.pushState) {\r\n                history.pushState(null, null, this.bezierCanvas.bezier.coordinates);\r\n            }\r\n        },\r\n        getValueArrayNum() {\r\n            return this.bezierCanvas.bezier.coordinates.toString().split(',').map(n => parseFloat(n));\r\n        },\r\n        getValueArray() {\r\n            return this.bezierCanvas.bezier.coordinates.toString().split(',');\r\n        },\r\n        getValueString() {\r\n            return this.bezierCanvas.bezier.coordinates.toString();\r\n        },\r\n        getValueCss() {\r\n            return \"cubic-bezier(\" + this.bezierCanvas.bezier.coordinates.toString() + \")\";\r\n        },\r\n        getDuration() {\r\n            return (isNaN(this.duration = Math.round(this.duration * 10) / 10)) ? null : this.duration;\r\n        },\r\n        checkCoordinates(coordinates) {\r\n            if (coordinates.length !== 4) return false;\r\n            let valid = true;\r\n            coordinates.forEach((c, i) => {\r\n                if (isNaN(c) || (!(i % 2) && (c < 0 || c > 1))) {\r\n                    console.log('Wrong coordinate at [' + i + '] (' + c + ')')\r\n                    valid = false;\r\n                } else if (isNaN(c) || ((i % 2) && (c < -.5 || c > 1.5))) {\r\n                    console.log('Wrong coordinate at [' + i + '] (' + c + ')')\r\n                    valid = false;\r\n                }\r\n            });\r\n            return valid;\r\n        },\r\n        init() {\r\n            const curveDisplay = document.createElement('div');\r\n            curveDisplay.classList.add('curve-display');\r\n            curveDisplay.innerHTML = this.template;\r\n            curveDisplay.style.width = opts.width + 90 + 'px';\r\n            if (opts.appendTo && typeof opts.appendChild === 'string')\r\n                $(opts.appendTo).appendChild(curveDisplay)\r\n            else\r\n                (opts.appendTo && opts.appendTo.appendChild(curveDisplay)) ||\r\n                document.body.appendChild(curveDisplay);\r\n\r\n            this.el = curveDisplay;\r\n            this.input = $('#curve-input', curveDisplay);\r\n            this.curve = $('.curve-canvas', curveDisplay);\r\n            this.P1 = $('.P1', curveDisplay);\r\n            this.P2 = $('.P2', curveDisplay);\r\n            this.library = $('.curve-library', curveDisplay);\r\n            this.save = $('.curve-save', curveDisplay);\r\n            this.duration = opts.duration || 1.5;\r\n            this.ball = $('.curve-preview-ball', curveDisplay);\r\n            this.ball && this.ball.style.setProperty(prefix + 'transition-duration', this.getDuration() + 's', null);\r\n            this.bezierCanvas = new BezierCanvas(this.curve, null, opts.padding || [.25, 0]);\r\n            this.P1.update = () => this.update();\r\n            this.lib = bezierLibrary(this.library, this.bezierCanvas, this.P1, this.P2, opts.bezierLibrary);\r\n\r\n            this.ctx = this.curve.getContext(\"2d\");\r\n\r\n            // Add predefined curves\r\n            opts.clearStorage && localStorage.curves && localStorage.removeItem('curves');\r\n            !localStorage.curves && this.lib.save(opts.predefined || predefined); //TODO storage api\r\n\r\n            this.lib.curves = JSON.parse(localStorage.curves);\r\n\r\n            this.lib.render();\r\n\r\n            opts.default && this.checkCoordinates(opts.default.split(',')) || (opts.default = false);\r\n            this.bezierCanvas.bezier = new CubicBezier(opts.default || \".25, .1, .25, 1\");\r\n            this.P1.style.left = this.bezierCanvas.offsets[0]['left'];\r\n            this.P1.style.top = this.bezierCanvas.offsets[0]['top'];\r\n            this.P2.style.left = this.bezierCanvas.offsets[1]['left'];\r\n            this.P2.style.top = this.bezierCanvas.offsets[1]['top'];\r\n\r\n            this.update();\r\n\r\n            this.P1.onmousedown = this.P2.onmousedown = this.onMouseDown;\r\n            this.P1.onkeydown = this.P2.onkeydown = opts.arrowKeyControls ? this.onKeyDown : null;\r\n            this.curve.onclick = opts.onClick ? this.onClick : null;\r\n            this.curve.onmousemove = this.onMouseMove;\r\n            this.input && (this.input.onchange = this.onChange);\r\n            this.ball && (this.ball.onclick = () => this.runPreview());\r\n            this.save.onclick = e => this.onSave(e);\r\n        }\r\n    }\r\n    return self;\r\n}\r\n\r\nwindow.cubicBezier = cubicBezier;"]}